package com.sample_android.modules.reg_sample;

/**
 * Created by huang_jin on 2018/3/23.
 * 常见的正则表达式
 * 1、java与其他语言中的的转义符号的区分：
 * 其他语言中，\（单斜杠）即可完成字符转义的工作，如果需要在正则表达式中表示一个普通的反斜杠只需要用"\\"标识即可；
 * 在java语言中，\\（双反斜杠）才能完成字符转义的工作，在这则表达式中\\\\标识一个普通的反斜杠;\\\标识后面的字符具有特殊的意义
 * <p>
 * 2、常用的字符转义符号
 * \：将下一个字符标记为特殊字符
 * ^：匹配字符开始位置
 * $：匹配字符结束位置；
 * *：匹配字符或字符串出现多次，等同于{0,}
 * +：匹配标识字符出现一次以上，等同于{1,}
 * {n}:n>=0;匹配字符正好出现n次
 * {n,m}:m>n;n>=0;匹配当前字符出现的范围在n到m之间
 * [abc]:匹配字符集--->plain匹配结果为a
 * [^abc]：反向匹配字符串中的字符--->plain匹配结果为 p l i n
 * x|y:匹配x或者y
 * [a-z]:匹配任意的小写字符---同理
 * [A_Z]:匹配任意的大写字符；
 * [0-9]:匹配任意数字----\d  \D
 * \b：匹配字符与空格之间的间距---例如er\b->匹配teacher,不匹配herb
 * \B：非字符边界匹配，与\b取相反的匹配规则
 * \r:匹配回车符（enter return）
 * \n:匹配换行符(newline)
 * \f:匹配
 * \s:匹配任意的空白字符,等同于[\n\r\t\v]
 * \t:匹配制表符（table）
 * \w:匹配任意字符，等同于[A_Za-z0-9_]----匹配任意的大小写字符和下划线
 */

public class RegExp {
}
